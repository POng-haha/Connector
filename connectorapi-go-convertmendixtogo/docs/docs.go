// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "SYE",
            "url": "https://aeon.co.th",
            "email": "sye@aeon.co.th"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Api/Agreement/UpdateStatus": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agreement"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key",
                        "name": "Api-Key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "DeviceOS",
                        "name": "Api-DeviceOS",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Channel",
                        "name": "Api-Channel",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "RequestID",
                        "name": "Api-RequestID",
                        "in": "header"
                    },
                    {
                        "description": "BodyRequest",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateStatusResponse"
                        }
                    }
                }
            }
        },
        "/Api/Collection/CollectionDetail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key",
                        "name": "Api-Key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "DeviceOS",
                        "name": "Api-DeviceOS",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Channel",
                        "name": "Api-Channel",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "RequestID",
                        "name": "Api-RequestID",
                        "in": "header"
                    },
                    {
                        "description": "Body Request",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/domain.CollectionDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CollectionDetailResponse"
                        }
                    }
                }
            }
        },
        "/Api/Collection/CollectionLog": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key",
                        "name": "Api-Key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "DeviceOS",
                        "name": "Api-DeviceOS",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Channel",
                        "name": "Api-Channel",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "RequestID",
                        "name": "Api-RequestID",
                        "in": "header"
                    },
                    {
                        "description": "Body Request",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/domain.CollectionLogRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CollectionLogResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CollectionDetailAgreement": {
            "type": "object",
            "properties": {
                "AgreementNo": {
                    "type": "string"
                },
                "AssetPrice": {
                    "type": "number"
                },
                "BeginSUEOSHDCharge": {
                    "type": "number"
                },
                "BeginSUEOSInterestNet": {
                    "type": "number"
                },
                "BeginSUEOSInterestVAT": {
                    "type": "number"
                },
                "BeginSUEOSOtherFee": {
                    "type": "number"
                },
                "BeginSUEOSPenalty": {
                    "type": "number"
                },
                "BeginSUEOSPrincipalNet": {
                    "type": "number"
                },
                "BeginSUEOSPrincipalVAT": {
                    "type": "number"
                },
                "BeginSUEOSTotal": {
                    "type": "number"
                },
                "BlackCaseDate": {
                    "type": "integer"
                },
                "BlackCaseNo": {
                    "type": "string"
                },
                "BlockCode": {
                    "type": "string"
                },
                "CourtCode": {
                    "type": "string"
                },
                "CourtName": {
                    "type": "string"
                },
                "CurrentSUEOSHDCharge": {
                    "type": "number"
                },
                "CurrentSUEOSInterestNet": {
                    "type": "number"
                },
                "CurrentSUEOSInterestVAT": {
                    "type": "number"
                },
                "CurrentSUEOSOtherFee": {
                    "type": "number"
                },
                "CurrentSUEOSPenalty": {
                    "type": "number"
                },
                "CurrentSUEOSPrincipalNet": {
                    "type": "number"
                },
                "CurrentSUEOSPrincipalVAT": {
                    "type": "number"
                },
                "CurrentSUEOSTotal": {
                    "type": "number"
                },
                "ExpectDate": {
                    "type": "integer"
                },
                "InstallmentAmount": {
                    "type": "number"
                },
                "JudgeAmount": {
                    "type": "number"
                },
                "JudgmentDate": {
                    "type": "integer"
                },
                "JudgmentDetail": {
                    "type": "string"
                },
                "JudgmentResultCode": {
                    "type": "integer"
                },
                "JudgmentResultDescription": {
                    "type": "string"
                },
                "LastPaymentDate": {
                    "type": "integer"
                },
                "NoOfInstallment": {
                    "type": "string"
                },
                "OutsourceID": {
                    "type": "string"
                },
                "OutsourceName": {
                    "type": "string"
                },
                "RedCaseDate": {
                    "type": "integer"
                },
                "RedCaseNo": {
                    "type": "string"
                },
                "SUESeqNo": {
                    "type": "integer"
                },
                "SUEStatus": {
                    "type": "integer"
                },
                "SUEStatusDescription": {
                    "type": "string"
                },
                "SeqOfAgreement": {
                    "type": "integer"
                },
                "TotalCurrentPerSUESeqNo": {
                    "type": "number"
                },
                "TotalPaymentAmount": {
                    "type": "number"
                }
            }
        },
        "domain.CollectionDetailRequest": {
            "type": "object",
            "required": [
                "IDCardNo"
            ],
            "properties": {
                "BlackCaseNo": {
                    "type": "string",
                    "maxLength": 15
                },
                "IDCardNo": {
                    "type": "string",
                    "maxLength": 20
                },
                "RedCaseNo": {
                    "type": "string",
                    "maxLength": 15
                }
            }
        },
        "domain.CollectionDetailResponse": {
            "type": "object",
            "properties": {
                "AgreementList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.CollectionDetailAgreement"
                    }
                },
                "IDCardNo": {
                    "type": "string"
                },
                "NoOfAgreement": {
                    "type": "integer"
                }
            }
        },
        "domain.CollectionLogRequest": {
            "type": "object",
            "required": [
                "AgreementNo",
                "InputDate",
                "InputTime",
                "OperatorID",
                "RemarkCode"
            ],
            "properties": {
                "AgreementNo": {
                    "type": "string",
                    "maxLength": 16
                },
                "InputDate": {
                    "type": "string",
                    "maxLength": 8
                },
                "InputTime": {
                    "type": "string",
                    "maxLength": 6
                },
                "LogRemark1": {
                    "type": "string",
                    "maxLength": 120
                },
                "LogRemark2": {
                    "type": "string",
                    "maxLength": 120
                },
                "LogRemark3": {
                    "type": "string",
                    "maxLength": 120
                },
                "LogRemark4": {
                    "type": "string",
                    "maxLength": 120
                },
                "LogRemark5": {
                    "type": "string",
                    "maxLength": 120
                },
                "OperatorID": {
                    "type": "string",
                    "maxLength": 15
                },
                "RemarkCode": {
                    "type": "string",
                    "maxLength": 4
                }
            }
        },
        "domain.CollectionLogResponse": {
            "type": "object",
            "properties": {
                "AgreementNo": {
                    "type": "string"
                },
                "IDCardNo": {
                    "type": "string"
                }
            }
        },
        "domain.UpdateStatusRequest": {
            "type": "object",
            "required": [
                "AEONID",
                "Agreement",
                "Status"
            ],
            "properties": {
                "AEONID": {
                    "type": "string",
                    "maxLength": 20
                },
                "Agreement": {
                    "type": "integer",
                    "maximum": 999999999999
                },
                "Status": {
                    "type": "string",
                    "maxLength": 1
                }
            }
        },
        "domain.UpdateStatusResponse": {
            "type": "object",
            "properties": {
                "AEONID": {
                    "type": "string",
                    "maxLength": 20
                },
                "Agreement": {
                    "type": "integer",
                    "maximum": 999999999999
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "10.254.97.103:8082",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Connector API Gateway",
	Description:      "This is the API Gateway for ConnectorAPI.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
